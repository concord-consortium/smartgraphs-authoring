<!-- Global taglib - these tags are shared across all subsites -->

<include src="rapid" gem="hobo"/>

<include src="taglibs/auto/rapid/cards"/>
<include src="taglibs/auto/rapid/pages"/>
<include src="taglibs/auto/rapid/forms"/>

<set-theme name="clean"/>

<!-- remove the position from all lists since it isn't needed to be viewed or modified-->
<extend tag="field-list">
  <old-field-list merge skip="position"/>
</extend>

<extend tag="page">
  <old-page merge>
    <footer:>
      <a href="&admin_users_url" if="&current_user.administrator?">
        <t key="hobo.admin.subsite_name">Admin</t>
      </a>
    </footer:>
  </old-page>
</extend>

<extend tag="card" for="Activity">
  <old-card merge>
    <append-body:>
      <a action='preview'>View in SmartGraphs Runtime</a>
    </append-body:>
  </old-card>
</extend>

<def tag="card" for="PagePane">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:pane for-type="&this.pane.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:pane>
</def>

<def tag="card" for="PageSequence">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:sequence for-type="&this.sequence.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:sequence>
</def>

<def tag="card" for="SequenceHint">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:hint for-type="&this.hint.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:hint>
</def>

<def tag="card" for="TextHintPrompt">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:prompt for-type="&this.prompt.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:prompt>
</def>

<def tag="card" for="InitialPromptPrompt">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:prompt for-type="&this.prompt.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:prompt>
</def>

<def tag="card" for="GiveUpPrompt">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:prompt for-type="&this.prompt.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:prompt>
</def>

<def tag="card" for="ConfirmCorrectPrompt">
  <!-- By default a recursive tag inside a polymorphic definition just calls the base card
       So we have to explicitly set the type-->
  <card:prompt for-type="&this.prompt.class" merge>
    <append-heading:>
      <delete-button label="Delete" param/>
    </append-heading:>
  </card:prompt>
</def>

<def tag="add-panes-toolbar">
  <a action="new" to="&this.image_panes">
    <ht key="image_pane.actions.new" >New Image Pane element</ht>
  </a>
  <a action="new" to="&this.predefined_graph_panes">
    <ht key="predefined_graph_pane.actions.new" >New Predefined Graph Pane element</ht>
  </a>
  <a action="new" to="&this.sensor_graph_panes">
    <ht key="sensor_graph_pane.actions.new" >New Sensor Graph Pane element</ht>
  </a>
  <a action="new" to="&this.prediction_graph_panes">
    <ht key="prediction_graph_pane.actions.new" >New Prediction Graph Pane element</ht>
  </a>
  <a action="new" to="&this.table_panes">
    <ht key="table_pane.actions.new" >New Table Pane element</ht>
  </a>
</def>

<def tag="add-sequences-toolbar">
  <!-- Limit Page Sequence to 1 member of the collection -->
  <unless test="&this.page_sequences">
    <a action="new" to="&this.instruction_sequences">
      <ht key="instruction_sequence.actions.new" >New Instruction Sequence element</ht>
    </a>
    <a action="new" to="&this.pick_a_point_sequences">
      <ht key="pick_a_point_sequence.actions.new" >New Pick-A-Point Sequence element</ht>
    </a>
    <a action="new" to="&this.numeric_sequences">
      <ht key="numeric_sequence.actions.new" >New Numeric Sequence element</ht>
    </a>
    <a action="new" to="&this.constructed_response_sequences">
      <ht key="constructed_response_sequence.actions.new" >New Constructed Response Sequence element</ht>
    </a>
  </unless>
</def>

<def tag="add-hints-toolbar">
    <a action="new" to="&this.text_hints">
      <ht key="text_hint.actions.new" >New Text Hint element</ht>
    </a>
</def>

<def tag="add-prompts-toolbar">
    <a action="new" to="&this.range_visual_prompts">
      <ht key="range_visual_prompt.actions.new" >New Range Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.point_circle_visual_prompts">
      <ht key="point_circle_visual_prompt.actions.new" >New Point Circle Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.point_axis_line_visual_prompts">
      <ht key="point_axis_line_visual_prompt.actions.new" >New Point Axis Line Visual Prompt element</ht>
    </a>
</def>

<def tag="add-initial-prompt-prompts-toolbar">
    <a action="new" to="&this.initial_range_visual_prompts">
      <ht key="range_visual_prompt.actions.new" >New Range Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.initial_point_circle_visual_prompts">
      <ht key="point_circle_visual_prompt.actions.new" >New Point Circle Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.initial_point_axis_line_visual_prompts">
      <ht key="point_axis_line_visual_prompt.actions.new" >New Point Axis Line Visual Prompt element</ht>
    </a>
</def>

<def tag="add-confirm-correct-prompts-toolbar">
    <a action="new" to="&this.confirm_range_visual_prompts">
      <ht key="range_visual_prompt.actions.new" >New Range Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.confirm_point_circle_visual_prompts">
      <ht key="point_circle_visual_prompt.actions.new" >New Point Circle Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.confirm_point_axis_line_visual_prompts">
      <ht key="point_axis_line_visual_prompt.actions.new" >New Point Axis Line Visual Prompt element</ht>
    </a>
</def>

<def tag="add-give-up-prompts-toolbar">
    <a action="new" to="&this.give_up_range_visual_prompts">
      <ht key="range_visual_prompt.actions.new" >New Range Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.give_up_point_circle_visual_prompts">
      <ht key="point_circle_visual_prompt.actions.new" >New Point Circle Visual Prompt element</ht>
    </a>
    <a action="new" to="&this.give_up_point_axis_line_visual_prompts">
      <ht key="point_axis_line_visual_prompt.actions.new" >New Point Axis Line Visual Prompt element</ht>
    </a>
</def>

<extend tag="form" for="Page">
  <old-form merge>
    <after-field-list:>
      <sortable-collection:page_panes/>
      <add-panes-toolbar/>
      <collection:page_sequences/>
      <add-sequences-toolbar/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="labelled-item">
  <if test="&this_parent.class == PickAPointSequence">
    <if test="&scope.field_name.to_s == 'correct_answer_x'">
      <tr>
        <th><h3>A specific Point:</h3></th>
        <td>
          <if test="&scope.in_form">
            <div>Fill in the x and y values for the correct point. If you're using a correct range, leave these blank.</div>
          </if>
        </td>
      </tr>
    </if>
    <if test="&scope.field_name.to_s == 'correct_answer_x_min'">
      <tr>
        <th><h3>Within a Range:</h3></th>
        <td>
          <if test="&scope.in_form">
            <div>Fill in at least one of the range boundaries. If you're using a specific point, leave these blank.</div>
          </if>
        </td>
      </tr>
    </if>
  </if>
  <old-labelled-item merge/>
</extend>

<extend tag="form" for="PickAPointSequence">
  <old-form merge>
    <field-list: fields="&this.field_order" />
    <after-field-list:>
      <h3>
        <ht key="sequence_hint.collection.heading" count="&this.sequence_hints.count" >
          <human-collection-name collection="sequence_hints" your/>
        </ht>
      </h3>
      <sortable-collection:sequence_hints/>
      <add-hints-toolbar/>

      <h3>
        <ht key="initial_prompt_prompt.collection.heading" count="&this.initial_prompt_prompts.count" >
          <human-collection-name collection="initial_prompt_prompts" your/>
        </ht>
      </h3>
      <collection:initial_prompt_prompts/>
      <add-initial-prompt-prompts-toolbar/>

      <h3>
        <ht key="give_up_prompt.collection.heading" count="&this.give_up_prompts.count" >
          <human-collection-name collection="give_up_prompts" your/>
        </ht>
      </h3>
      <collection:give_up_prompts/>
      <add-give-up-prompts-toolbar/>

      <h3>
        <ht key="confirm_correct_prompt.collection.heading" count="&this.confirm_correct_prompts.count" >
          <human-collection-name collection="confirm_correct_prompts" your/>
        </ht>
      </h3>
      <collection:confirm_correct_prompts/>
      <add-confirm-correct-prompts-toolbar/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="form" for="NumericSequence">
  <old-form merge>
    <after-field-list:>
      <h3>
        <ht key="sequence_hint.collection.heading" count="&this.sequence_hints.count" >
          <human-collection-name collection="sequence_hints" your/>
        </ht>
      </h3>
      <sortable-collection:sequence_hints/>
      <add-hints-toolbar/>
      <h3>
        <ht key="initial_prompt_prompt.collection.heading" count="&this.initial_prompt_prompts.count" >
          <human-collection-name collection="initial_prompt_prompts" your/>
        </ht>
      </h3>
      <collection:initial_prompt_prompts/>
      <add-initial-prompt-prompts-toolbar/>

      <h3>
        <ht key="give_up_prompt.collection.heading" count="&this.give_up_prompts.count" >
          <human-collection-name collection="give_up_prompts" your/>
        </ht>
      </h3>
      <collection:give_up_prompts/>
      <add-give-up-prompts-toolbar/>

      <h3>
        <ht key="confirm_correct_prompt.collection.heading" count="&this.confirm_correct_prompts.count" >
          <human-collection-name collection="confirm_correct_prompts" your/>
        </ht>
      </h3>
      <collection:confirm_correct_prompts/>
      <add-confirm-correct-prompts-toolbar/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="form" for="TextHint">
  <old-form merge>
    <after-field-list:>
      <collection:text_hint_prompts/>
      <add-prompts-toolbar/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="form" for="PredefinedGraphPane">
  <old-form merge>
    <field-list: fields="&this.field_order">
      <y_unit-tag: include-none blank-message="No units"/>
      <x_unit-tag: include-none blank-message="No units"/>
    </field-list:>
    <after-field-list:>
      <h3>Included prediction graphs</h3>
      <custom-poly-select-many:included_graphs prompt="Include graph data from:" options="&PredictionGraphPane.get_all_prediction_graph_panes_before(this)"/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="form" for="PredictionGraphPane">
  <old-form merge>
    <field-list: fields="&this.field_order">
      <y_unit-tag: include-none blank-message="No units"/>
      <x_unit-tag: include-none blank-message="No units"/>
    </field-list:>
    <after-field-list:>
      <h3>Included prediction graphs</h3>
      <custom-poly-select-many:included_graphs prompt="Include graph data from:" options="&PredictionGraphPane.get_all_prediction_graph_panes_before(this)"/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="form" for="SensorGraphPane">
  <old-form merge>
    <field-list: fields="&this.field_order">
      <y_unit-tag: include-none blank-message="No units"/>
      <x_unit-tag: include-none blank-message="No units"/>
    </field-list:>
    <after-field-list:>
      <h3>Included prediction graphs</h3>
      <custom-poly-select-many:included_graphs prompt="Include graph data from:" options="&PredictionGraphPane.get_all_prediction_graph_panes_before(this)"/>
    </after-field-list:>
  </old-form>
</extend>

<extend tag="show-page" for="SensorGraphPane">
  <old-show-page merge>
    <field-list: fields="&this.field_order" />
    <after-field-list:>
      <h3>Included Prediction Graphs</h3>
      <collection:included_graphs />
    </after-field-list:>
  </old-show-page>
</extend>

<extend tag="show-page" for="PredefinedGraphPane">
  <old-show-page merge>
    <field-list: fields="&this.field_order">
      <data-tag: with="&this.gsub('&#10;', '<br>').html_safe"/>
    </field-list:>
    <after-field-list:>
      <h3>Included Prediction Graphs</h3>
      <collection:included_graphs />
    </after-field-list:>
  </old-show-page>
</extend>

<extend tag="show-page" for="PredictionGraphPane">
  <old-show-page merge>
    <field-list: fields="&this.field_order" />
    <after-field-list:>
      <h3>Included Prediction Graphs</h3>
      <collection:included_graphs />
    </after-field-list:>
  </old-show-page>
</extend>

<def tag="custom-poly-select-many" attrs="options, targets, remove-label, prompt, disabled, name"><%
  prompt ||= ht("#{this_field_reflection.klass.to_s.underscore}.form.select_many.prompt", :default=>"Add #{this_field.titleize.singularize}")
  options ||= this_field_reflection.klass.all(:conditions =>this.send(:conditions)).select {|x| can_view?(x)}
  name ||= param_name_for_this

  values = this
  remove_label ||= t("hobo.actions.remove", :default=>'Remove')
  -%>
  <div class="input select-many" merge-attrs>
    <div style="display:none" class="item-proto">
      <div class="item" param="proto-item">
        <span></span>
        <input type="hidden" name="#{name}[]" param="proto-hidden"/>
        <input type="button" class="remove-item" value="#{remove_label}" param="proto-remove-button"/>
      </div>
    </div>
    <div class="items">
      <div class="item" param="item" repeat>
        <span><%= h this.to_s %></span>
        <input type="hidden" name="#{name}[]" value="@#{h this.class.to_s}|#{h this.id}" disabled="&disabled"
               param="hidden"/>
        <input type="button" class="remove-item" value="#{remove_label}" disabled="&disabled"
               param="remove-button"/>
      </div>
    </div>
    <select merge-attrs="&{:disabled => disabled}">
      <option value=""><prompt/></option>
      <repeat with="&options">
        <if test="&this.in?(values)">
          <optgroup class="disabled-option" label="#{h this.to_s}" alt="@#{this.id}">&nbsp;</optgroup>
        </if>
        <else>
          <option value="@#{h this.class.to_s}|#{this.id}"><%= h this.to_s %></option>
        </else>
      </repeat>
    </select>
  </div>
</def>

